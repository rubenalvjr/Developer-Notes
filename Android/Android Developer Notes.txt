
    *************Android Developer Notes****************
- SDK : (Software Development Kit) : software development tools that allow the creation of applications
- Minimum SDK: JellyBean : lowest version of Android supported, it can limit who can run your application
- Target SDK: Set Automatically : set to most current version of Android to provide maximum functionality

*****Changing App Icon *****
1. Right click app folder
2. Click New --> Image Asset
3. Select the file to be new app icon

****Android Layout Manager or View Groups****
- Linear Layout : group view that aligns all children in a single direction (vertical/horizonal)
    - can be set with the 'android:orientation' attribute
    - all children are stacked one after the other

- Relative Layout : group that displays child views in a relative position. The position of each view
            can be specified as relative to a sibling or a position relative to the parent relative layout

- Frame Layout : Simplest of the layouts

*******Android Stack and Gradle******
Android Project -> Build (Using Gradle) -> APK (the application) -> Install all (using ADB)
ADB (Android Debug Bridge): installs app onto device, allows for debugging, and starts application


*****Android Code Helper*****
- ScrollView : a layout container that be scrolled by the user
    - a Linear Layout can be placed inside to display multiple Views
- ListView : a specialized control that is optimized for displaying long list of items.
- Adapters : Adapters translate a data source into views for a ListView to display.

  1. Raw Data(ArrayList) ->
  2. Pass into  ArrayAdapter(which references a layout and ArrayList) ->
  3. Create a ListView and associate it to a given ListView attribute ->
  4. Pass ArrayAdapter object to ListView method .setAdapter method

  *****Inflating Activity and Fragment***
  - To turn an xml layout into Java view objects, we need to inflate the layout
  - For an Activity
        - call the setContentView method in the onCreate in our Activity
  - For a Fragment
        - In our Fragment classes we inflate the layout in the onCreateView method, which includes a
        LayoutInflater as a parameter:
        - View rootView = inflater.inflate(R.layout.fragment_main, container, false);


******UI Building********
 - android:textAppearance="?android:textAppearanceMedium" -> Uses android standards set of text sizes
 - Make touch targets at least 48 dp at least
 - use sp for adjusting text size and dp for everything else

*****Tips and Tricks******
